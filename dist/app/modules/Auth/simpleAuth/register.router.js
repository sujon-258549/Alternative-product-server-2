"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.userRouter = void 0;
const register_controller_1 = require("./register.controller");
const register_Validation_1 = require("./register.Validation");
const zodValidation_1 = __importDefault(require("../../utility/zodValidation"));
const auth_1 = __importDefault(require("../../utility/auth"));
const register_const_1 = require("./register.const");
const express_1 = require("express");
const router = (0, express_1.Router)();
router.post('/register', register_controller_1.UserController.CreateUser);
router.post('/forget-password', register_controller_1.UserController.forgetPassword);
router.post('/login', register_controller_1.UserController.loginUser);
router.post('/create-access-token', (0, zodValidation_1.default)(register_Validation_1.userValidation.refreshTokenSchema), register_controller_1.UserController.refreshTokenUseCreateSecretToken);
router.post('/set-image', (0, auth_1.default)(register_const_1.UserRole.user), register_controller_1.UserController.setImageIntoUser);
router.post('/reset-password', register_controller_1.UserController.resetPassword);
router.post('/change-password', (0, auth_1.default)(register_const_1.UserRole.user), register_controller_1.UserController.changePassword);
router.get('/get-me', (0, auth_1.default)(register_const_1.UserRole.user), register_controller_1.UserController.getMe);
router.get('/', register_controller_1.UserController.getAllUser);
router.patch('/update', (0, auth_1.default)('user'), register_controller_1.UserController.updateUser);
exports.userRouter = router;
